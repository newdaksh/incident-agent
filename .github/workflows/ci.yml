name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.9'

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: services/backend/package-lock.json
    
    - name: Install backend dependencies
      run: |
        cd services/backend
        npm ci
    
    - name: Lint backend
      run: |
        cd services/backend
        npm run lint
    
    - name: Test backend
      run: |
        cd services/backend
        npm test
      env:
        MONGO_URI: mongodb://localhost:27017/incident-agent-test
        REDIS_URL: redis://localhost:6379
        JWT_SECRET: test-secret
        NODE_ENV: test

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: services/frontend/package-lock.json
    
    - name: Install frontend dependencies
      run: |
        cd services/frontend
        npm ci
    
    - name: Lint frontend
      run: |
        cd services/frontend
        npm run lint
    
    - name: Test frontend
      run: |
        cd services/frontend
        npm test
    
    - name: Build frontend
      run: |
        cd services/frontend
        npm run build

  test-genai-service:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install GenAI service dependencies
      run: |
        cd services/genai-service
        pip install -r requirements.txt
    
    - name: Lint GenAI service
      run: |
        cd services/genai-service
        flake8 app --max-line-length=100
    
    - name: Test GenAI service
      run: |
        cd services/genai-service
        pytest app/tests/ -v
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

  integration-tests:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend, test-genai-service]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
    
    - name: Start services with Docker Compose
      run: |
        cp .env.example .env
        docker-compose up -d --build
        sleep 30
    
    - name: Run integration tests
      run: |
        npm install
        npm run test:integration
      env:
        API_URL: http://localhost:5000
        GENAI_URL: http://localhost:8000
    
    - name: Run E2E tests
      run: |
        npm run test:e2e
      env:
        FRONTEND_URL: http://localhost:3000
    
    - name: Cleanup
      run: docker-compose down

  build-images:
    runs-on: ubuntu-latest
    needs: [integration-tests]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./services/backend
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/incident-agent-backend:latest
          ${{ secrets.DOCKER_USERNAME }}/incident-agent-backend:${{ github.sha }}
    
    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./services/frontend
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/incident-agent-frontend:latest
          ${{ secrets.DOCKER_USERNAME }}/incident-agent-frontend:${{ github.sha }}
    
    - name: Build and push GenAI service image
      uses: docker/build-push-action@v5
      with:
        context: ./services/genai-service
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/incident-agent-genai:latest
          ${{ secrets.DOCKER_USERNAME }}/incident-agent-genai:${{ github.sha }}

  deploy-staging:
    runs-on: ubuntu-latest
    needs: [build-images]
    if: github.ref == 'refs/heads/develop'
    environment: staging
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        # Add your staging deployment steps here
        # e.g., SSH to staging server, pull images, restart services
    
  deploy-production:
    runs-on: ubuntu-latest
    needs: [build-images]
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to production
      run: |
        echo "Deploying to production environment..."
        # Add your production deployment steps here
        # e.g., SSH to production server, pull images, restart services